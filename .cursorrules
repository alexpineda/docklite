# Ansible API Deployment Setup

## Architecture
- Local Flask dashboard for monitoring
- Remote Docker deployments on DigitalOcean
- Caddy for reverse proxy and SSL
- All services expose port 3000

## Project Structure
```
├── dashboard/           # Local monitoring dashboard (runs on Mac)
│   └── deploy.py           # Ansible deployment script
│   └── app.py
├── vars/               # Ansible variables
├── templates/          # Ansible templates
│   └── caddy/         # Caddy reverse proxy configs
```

## Deployment
1. Images are deployed to DigitalOcean container registry
- This may change to Github as we need Github actions to build the images
- We list the images in 
1. Services are deployed via:
   deploy.py
   we write to vars/services.yml and var/domain.yml so that the ansible playbook.yml and deploy.yml can use them
2. Each service should:
   - Expose port 3000
   - Be available as a Docker image
   - Support health checks

## Dashboard
- Runs locally on Mac
- Connects to remote Docker daemon
- Requires TLS certificates in dashboard/certs/
- Access at http://localhost:3000

## Configuration
- Services are tracked in vars/services.yml
- Each service needs:
  - name: derived from domain eg. bun-example-api
  - image: Docker image eg. registry.digitalocean.com/api-alexpineda-containers/bun-example-api:latest
  - domain: service domain eg. bun-example-api.api.alexpineda.ca


When asking about the remote host and debugging stuff, use sshpass and HOST_SSH_USER and HOST_SSH_PASSWORD

example command:
source .env && export SSHPASS=$HOST_SSH_PASSWORD && sshpass -e ssh -o StrictHostKeyChecking=no $HOST_SSH_USER@$DROPLET_IP "docker ps"